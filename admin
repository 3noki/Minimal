#!/bin/bash

source "${BASH_SOURCE[0]}.cfg"

bold() {
    echo "$(tty -s && tput bold)$1$(tty -s && tput sgr0)" 
}

error() { 
    echo "$(tty -s && tput bold)$(tty -s && tput setaf 1)$1$(tty -s && tput sgr0)" 
}

client_build() {
    generator=${1:-${generator}}
    shift
    if [ ${generator} = "go" ]; then 
        go run tools/generator.go $@
    elif [ ${generator} = "python" ]; then
        python tools/generator.py $@
    elif [ ${generator} = "node" ]; then
        node tools/generator.js $@
    fi
}

client_start() {
    export ENVIRONMENT=development
    generator=${1:-${generator}}
    shift
    client_build ${generator} build $@
    if [ ${generator} = "go" ]; then
        start_command="go run tools/server.go"
    elif [ ${generator} = "python" ]; then
        start_command="python tools/server.py"
    elif [ ${generator} = "node" ]; then
        start_command="node tools/server.js"
    fi
    if [ ! -z "$start_command" ]; then
        start_command="${start_command} build --port 8080 --index-page index.html --error-page error.html --redirect-map redirect.map --browse"
        ${start_command} 
    fi
}

client_deploy() {
    export ENVIRONMENT=production
    bold "build"
    client_build ${generator} build --redirect ${redirect}
    bold "deploy"
    if [ ! -z "${deployment}" ]; then
        deploy/${deployment} deploy build $@
    fi
}

client_log() {
    if [ ! -z "${deployment}" ]; then
        deploy/${deployment} log
    fi
}

client_console() {
    if [ ! -z "${deployment}" ]; then
        deploy/${deployment} console
    fi
}

client_watch() {
    export ENVIRONMENT=development
    client_build ${1}
    case "$(uname -s)" in
        Darwin*) 
            if [ -z "$(which fswatch)" ]; then
                brew install fswatch
            fi
            fswatch -r -o . -e build | xargs -n1 ./admin build
            ;;
    esac
}

client_test() {
    rm -rf build/*
    bold "node"
    ENVIRONMENT=production node tools/generator.js build/node
    bold "go"
    ENVIRONMENT=production go run tools/generator.go build/go
    bold "python"
    ENVIRONMENT=production python tools/generator.py build/python
    bold "compare"
    diff --brief -r build/node/ build/go/
    diff --brief -r build/node/ build/python/
}

command="$1"
shift
case "${command}" in
    "build") client_build $@;;
    "start") client_start $@;;
    "deploy") client_deploy $@;;
    "log") client_log;;
    "console") client_console;;
    "watch") client_watch $@;;
    "test") client_test;;
    *)
        echo;
        echo "Usage: $(tty -s && tput bold)$(basename "$0")$(tty -s && tput sgr0) <command>"
        echo
        echo "    build      Build the website"
        echo "    start      Build and launch simple local web server"
        echo "    deploy     Build and deploy to production environment"
        echo "    log        Show production log"
        echo "    console    Connect to production environment via SSH"
        echo;
    ;;
esac
